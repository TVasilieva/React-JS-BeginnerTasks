{"ast":null,"code":"var _jsxFileName = \"D:\\\\Beginner\\\\React-JS-BeginnerTasks\\\\search-input\\\\src\\\\components\\\\Uncontrolled input\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport \"./style.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UncontrolledInput = _ref => {\n  _s();\n\n  var _input$current;\n\n  let {\n    data,\n    mode\n  } = _ref;\n  const input = useRef(null);\n  useEffect(() => {}, [input === null || input === void 0 ? void 0 : (_input$current = input.current) === null || _input$current === void 0 ? void 0 : _input$current.value]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(data.filter(e => {\n      var _input$current2;\n\n      return e === null || e === void 0 ? void 0 : e.title.toLowerCase().includes(input === null || input === void 0 ? void 0 : (_input$current2 = input.current) === null || _input$current2 === void 0 ? void 0 : _input$current2.value.toLowerCase());\n    }));\n    input.current.value && \"\";\n  };\n\n  const dataOptions = data.map(e => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: e.title\n    }, Math.random() * Math.random(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"uncontrolled-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        list: \"data2\",\n        className: \"uncontrolled-input\",\n        type: \"text\",\n        ref: input,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n        id: \"data2\",\n        children: dataOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"uncontrolled-button\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(UncontrolledInput, \"UzX6A0ZAGB3/f4YQseayCi08Eco=\");\n\n_c = UncontrolledInput;\nexport default UncontrolledInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"UncontrolledInput\");","map":{"version":3,"sources":["D:/Beginner/React-JS-BeginnerTasks/search-input/src/components/Uncontrolled input/index.tsx"],"names":["React","useEffect","useRef","UncontrolledInput","data","mode","input","current","value","handleSubmit","event","preventDefault","console","log","filter","e","title","toLowerCase","includes","dataOptions","map","Math","random"],"mappings":";;;AAAA,OAAOA,KAAP,IAAoBC,SAApB,EAA+BC,MAA/B,QAA6C,OAA7C;AAGA,OAAO,cAAP;;;;AAGA,MAAMC,iBAAqC,GAAG,QAAoB;AAAA;;AAAA;;AAAA,MAAnB;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAmB;AAChE,QAAMC,KAAK,GAAGJ,MAAM,CAAM,IAAN,CAApB;AAEAD,EAAAA,SAAS,CAAC,MAAM,CAAE,CAAT,EAAW,CAACK,KAAD,aAACA,KAAD,yCAACA,KAAK,CAAEC,OAAR,mDAAC,eAAgBC,KAAjB,CAAX,CAAT;;AAEA,QAAMC,YAAY,GAAIC,KAAD,IAAsB;AACzCA,IAAAA,KAAK,CAACC,cAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CACET,IAAI,CAACU,MAAL,CAAaC,CAAD;AAAA;;AAAA,aACVA,CADU,aACVA,CADU,uBACVA,CAAC,CAAEC,KAAH,CAASC,WAAT,GAAuBC,QAAvB,CAAgCZ,KAAhC,aAAgCA,KAAhC,0CAAgCA,KAAK,CAAEC,OAAvC,oDAAgC,gBAAgBC,KAAhB,CAAsBS,WAAtB,EAAhC,CADU;AAAA,KAAZ,CADF;AAKAX,IAAAA,KAAK,CAACC,OAAN,CAAcC,KAAd,IAAuB,EAAvB;AACD,GARD;;AAUA,QAAMW,WAAW,GAAGf,IAAI,CAACgB,GAAL,CAAUL,CAAD,IAAwB;AACnD,wBAAO;AAAQ,MAAA,KAAK,EAAEA,CAAC,CAACC;AAAjB,OAA6BK,IAAI,CAACC,MAAL,KAAgBD,IAAI,CAACC,MAAL,EAA7C;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFmB,CAApB;AAIA,sBACE;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEb,YAAhB;AAA8B,MAAA,SAAS,EAAC,mBAAxC;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,SAAS,EAAC,oBAFZ;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,GAAG,EAAEH,KAJP;AAKE,QAAA,QAAQ;AALV;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAU,QAAA,EAAE,EAAC,OAAb;AAAA,kBAAsBa;AAAtB;AAAA;AAAA;AAAA;AAAA,cARF,eASE;AAAQ,QAAA,SAAS,EAAC,qBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAeD,CAlCD;;GAAMhB,iB;;KAAAA,iB;AAoCN,eAAeA,iBAAf","sourcesContent":["import React, { FC, useEffect, useRef } from \"react\";\r\nimport { top100FilmsType } from \"../../data\";\r\n\r\nimport \"./style.scss\";\r\nimport { ComponentProps } from \"./types\";\r\n\r\nconst UncontrolledInput: FC<ComponentProps> = ({ data, mode }) => {\r\n  const input = useRef<any>(null);\r\n\r\n  useEffect(() => {}, [input?.current?.value]);\r\n\r\n  const handleSubmit = (event: any): void => {\r\n    event.preventDefault();\r\n    console.log(\r\n      data.filter((e: any) =>\r\n        e?.title.toLowerCase().includes(input?.current?.value.toLowerCase())\r\n      )\r\n    );\r\n    input.current.value && \"\";\r\n  };\r\n\r\n  const dataOptions = data.map((e: top100FilmsType) => {\r\n    return <option value={e.title} key={Math.random() * Math.random()} />;\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit} className=\"uncontrolled-form\">\r\n        <input\r\n          list=\"data2\"\r\n          className=\"uncontrolled-input\"\r\n          type=\"text\"\r\n          ref={input}\r\n          required\r\n        />\r\n        <datalist id=\"data2\">{dataOptions}</datalist>\r\n        <button className=\"uncontrolled-button\">Search</button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UncontrolledInput;\r\n"]},"metadata":{},"sourceType":"module"}