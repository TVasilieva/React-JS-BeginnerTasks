{"ast":null,"code":"var _jsxFileName = \"D:\\\\Beginner\\\\React-JS-BeginnerTasks\\\\timer\\\\src\\\\page\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Layout from \"../components/layout\";\nimport Timer from \"../components/timer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst date = new Date(\"2020-01-01 00:00:08\");\n\nconst TimerPage = () => {\n  _s();\n\n  const [timer, setTimer] = useState(date);\n  useEffect(() => {\n    setTimer(date);\n  }, []);\n  useEffect(() => {\n    const tickTimer = setTimeout(() => {\n      setTimer(timer => new Date(+timer - 1));\n    }, 1000);\n    return () => clearTimeout(tickTimer);\n  }, [timer]);\n\n  const updateTimer = () => {\n    setTimer(date);\n  };\n\n  const pauseTimer = () => {\n    console.log(\"PAUSE\");\n  };\n\n  const resetTimer = () => {\n    setTimer(new Date(new Date().setHours(0, 0, 0, 0)));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(Timer, {\n      settings: timer,\n      updateTimer: updateTimer,\n      pauseTimer: pauseTimer,\n      onComplete: resetTimer,\n      children: (hours, minutes, seconds) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: hours\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minutes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: seconds\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TimerPage, \"8B+ischwyVPCwtSOARN8zjOoois=\");\n\n_c = TimerPage;\nexport default TimerPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimerPage\");","map":{"version":3,"sources":["D:/Beginner/React-JS-BeginnerTasks/timer/src/page/index.tsx"],"names":["React","useEffect","useState","Layout","Timer","date","Date","TimerPage","timer","setTimer","tickTimer","setTimeout","clearTimeout","updateTimer","pauseTimer","console","log","resetTimer","setHours","hours","minutes","seconds"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAIA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;;AAEA,MAAMC,IAAI,GAAG,IAAIC,IAAJ,CAAS,qBAAT,CAAb;;AAEA,MAAMC,SAAmC,GAAG,MAAM;AAAA;;AAChD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAACG,IAAD,CAAlC;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,QAAQ,CAACJ,IAAD,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;AAIAJ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,SAAS,GAAGC,UAAU,CAAC,MAAM;AACjCF,MAAAA,QAAQ,CAAED,KAAD,IAAW,IAAIF,IAAJ,CAAS,CAACE,KAAD,GAAS,CAAlB,CAAZ,CAAR;AACD,KAF2B,EAEzB,IAFyB,CAA5B;AAIA,WAAO,MAAMI,YAAY,CAACF,SAAD,CAAzB;AACD,GANQ,EAMN,CAACF,KAAD,CANM,CAAT;;AAQA,QAAMK,WAAW,GAAG,MAAY;AAC9BJ,IAAAA,QAAQ,CAACJ,IAAD,CAAR;AACD,GAFD;;AAIA,QAAMS,UAAU,GAAG,MAAY;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD,GAFD;;AAIA,QAAMC,UAAU,GAAG,MAAY;AAC7BR,IAAAA,QAAQ,CAAC,IAAIH,IAAJ,CAAS,IAAIA,IAAJ,GAAWY,QAAX,CAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B,EAA6B,CAA7B,CAAT,CAAD,CAAR;AACD,GAFD;;AAIA,sBACE,QAAC,MAAD;AAAA,2BACE,QAAC,KAAD;AACE,MAAA,QAAQ,EAAEV,KADZ;AAEE,MAAA,WAAW,EAAEK,WAFf;AAGE,MAAA,UAAU,EAAEC,UAHd;AAIE,MAAA,UAAU,EAAEG,UAJd;AAAA,gBAMG,CAACE,KAAD,EAAgBC,OAAhB,EAAiCC,OAAjC,kBACC;AAAA,gCACE;AAAA,oBAAOF;AAAP;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CA7CD;;GAAMd,S;;KAAAA,S;AA+CN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport { ComponentProps } from \"./types\";\r\n\r\nimport Layout from \"../components/layout\";\r\nimport Timer from \"../components/timer\";\r\n\r\nconst date = new Date(\"2020-01-01 00:00:08\");\r\n\r\nconst TimerPage: React.FC<ComponentProps> = () => {\r\n  const [timer, setTimer] = useState(date);\r\n\r\n  useEffect(() => {\r\n    setTimer(date);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const tickTimer = setTimeout(() => {\r\n      setTimer((timer) => new Date(+timer - 1));\r\n    }, 1000);\r\n\r\n    return () => clearTimeout(tickTimer);\r\n  }, [timer]);\r\n\r\n  const updateTimer = (): void => {\r\n    setTimer(date);\r\n  };\r\n\r\n  const pauseTimer = (): void => {\r\n    console.log(\"PAUSE\");\r\n  };\r\n\r\n  const resetTimer = (): void => {\r\n    setTimer(new Date(new Date().setHours(0, 0, 0, 0)));\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <Timer\r\n        settings={timer}\r\n        updateTimer={updateTimer}\r\n        pauseTimer={pauseTimer}\r\n        onComplete={resetTimer}\r\n      >\r\n        {(hours: number, minutes: number, seconds: number) => (\r\n          <>\r\n            <span>{hours}</span>\r\n            <span>{minutes}</span>\r\n            <span>{seconds}</span>\r\n          </>\r\n        )}\r\n      </Timer>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default TimerPage;\r\n"]},"metadata":{},"sourceType":"module"}