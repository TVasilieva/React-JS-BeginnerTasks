{"ast":null,"code":"var _jsxFileName = \"D:\\\\Beginner\\\\React-JS-BeginnerTasks\\\\timer\\\\src\\\\page\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Layout from \"../components/layout\";\nimport Timer from \"../components/timer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst date = new Date(\"July 16, 2018 05:35:05\");\nconst settings = {\n  currentHours: date.getHours(),\n  currentMinutes: date.getMinutes(),\n  currentSeconds: date.getSeconds()\n};\n\nconst TimerPage = () => {\n  _s();\n\n  const [hours, setHours] = useState(0);\n  const [minutes, setMinutes] = useState(0);\n  const [seconds, setSeconds] = useState(0);\n  const {\n    currentHours,\n    currentMinutes,\n    currentSeconds\n  } = settings;\n  useEffect(() => {\n    setHours(currentHours);\n    setMinutes(currentMinutes);\n    setSeconds(currentSeconds);\n  }, []);\n  useEffect(() => {\n    //Timers\n    const hoursTimer = setInterval(() => {\n      setHours(hours - 1);\n    }, 3600000);\n    const minutesTimer = setInterval(() => {\n      setMinutes(minutes - 1);\n    }, 60000);\n    const secondsTimer = setInterval(() => {\n      setSeconds(seconds);\n    }, 1000); //Condition to clear\n\n    if (!hours) clearInterval(hoursTimer);\n    if (!minutes) clearInterval(minutesTimer);\n    if (!seconds) clearInterval(secondsTimer);\n  }, [hours, minutes, seconds]);\n\n  const onTimerCompleted = () => {//!hours && !minutes && !seconds && console.log(\"Boom!\");\n  };\n\n  onTimerCompleted();\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(Timer, {\n      settings: settings,\n      onComplete: () => {},\n      children: (hours, minutes, seconds) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: hours\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minutes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: seconds\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TimerPage, \"RO0azCPh96PFWqpMQlHymBG1xik=\");\n\n_c = TimerPage;\nexport default TimerPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimerPage\");","map":{"version":3,"sources":["D:/Beginner/React-JS-BeginnerTasks/timer/src/page/index.tsx"],"names":["React","useEffect","useState","Layout","Timer","date","Date","settings","currentHours","getHours","currentMinutes","getMinutes","currentSeconds","getSeconds","TimerPage","hours","setHours","minutes","setMinutes","seconds","setSeconds","hoursTimer","setInterval","minutesTimer","secondsTimer","clearInterval","onTimerCompleted"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAIA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;;AAEA,MAAMC,IAAI,GAAG,IAAIC,IAAJ,CAAS,wBAAT,CAAb;AAEA,MAAMC,QAAkB,GAAG;AACzBC,EAAAA,YAAY,EAAEH,IAAI,CAACI,QAAL,EADW;AAEzBC,EAAAA,cAAc,EAAEL,IAAI,CAACM,UAAL,EAFS;AAGzBC,EAAAA,cAAc,EAAEP,IAAI,CAACQ,UAAL;AAHS,CAA3B;;AAMA,MAAMC,SAAmC,GAAG,MAAM;AAAA;;AAChD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACiB,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,CAAD,CAAtC;AAEA,QAAM;AAAEM,IAAAA,YAAF;AAAgBE,IAAAA,cAAhB;AAAgCE,IAAAA;AAAhC,MAAmDL,QAAzD;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,QAAQ,CAACR,YAAD,CAAR;AACAU,IAAAA,UAAU,CAACR,cAAD,CAAV;AACAU,IAAAA,UAAU,CAACR,cAAD,CAAV;AACD,GAJQ,EAIN,EAJM,CAAT;AAMAX,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMoB,UAAU,GAAGC,WAAW,CAAC,MAAM;AACnCN,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD,KAF6B,EAE3B,OAF2B,CAA9B;AAIA,UAAMQ,YAAY,GAAGD,WAAW,CAAC,MAAM;AACrCJ,MAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACD,KAF+B,EAE7B,KAF6B,CAAhC;AAIA,UAAMO,YAAY,GAAGF,WAAW,CAAC,MAAM;AACrCF,MAAAA,UAAU,CAACD,OAAD,CAAV;AACD,KAF+B,EAE7B,IAF6B,CAAhC,CAVc,CAcd;;AACA,QAAI,CAACJ,KAAL,EAAYU,aAAa,CAACJ,UAAD,CAAb;AACZ,QAAI,CAACJ,OAAL,EAAcQ,aAAa,CAACF,YAAD,CAAb;AACd,QAAI,CAACJ,OAAL,EAAcM,aAAa,CAACD,YAAD,CAAb;AACf,GAlBQ,EAkBN,CAACT,KAAD,EAAQE,OAAR,EAAiBE,OAAjB,CAlBM,CAAT;;AAoBA,QAAMO,gBAAgB,GAAG,MAAY,CACnC;AACD,GAFD;;AAIAA,EAAAA,gBAAgB;AAEhB,sBACE,QAAC,MAAD;AAAA,2BACE,QAAC,KAAD;AAAO,MAAA,QAAQ,EAAEnB,QAAjB;AAA2B,MAAA,UAAU,EAAE,MAAM,CAAE,CAA/C;AAAA,gBACG,CAACQ,KAAD,EAAgBE,OAAhB,EAAiCE,OAAjC,kBACC;AAAA,gCACE;AAAA,oBAAOJ;AAAP;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAOE;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,oBAAOE;AAAP;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CApDD;;GAAML,S;;KAAAA,S;AAsDN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport { ComponentProps, Settings } from \"./types\";\r\n\r\nimport Layout from \"../components/layout\";\r\nimport Timer from \"../components/timer\";\r\n\r\nconst date = new Date(\"July 16, 2018 05:35:05\");\r\n\r\nconst settings: Settings = {\r\n  currentHours: date.getHours(),\r\n  currentMinutes: date.getMinutes(),\r\n  currentSeconds: date.getSeconds(),\r\n};\r\n\r\nconst TimerPage: React.FC<ComponentProps> = () => {\r\n  const [hours, setHours] = useState(0);\r\n  const [minutes, setMinutes] = useState(0);\r\n  const [seconds, setSeconds] = useState(0);\r\n\r\n  const { currentHours, currentMinutes, currentSeconds } = settings;\r\n\r\n  useEffect(() => {\r\n    setHours(currentHours);\r\n    setMinutes(currentMinutes);\r\n    setSeconds(currentSeconds);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    //Timers\r\n    const hoursTimer = setInterval(() => {\r\n      setHours(hours - 1);\r\n    }, 3600000);\r\n\r\n    const minutesTimer = setInterval(() => {\r\n      setMinutes(minutes - 1);\r\n    }, 60000);\r\n\r\n    const secondsTimer = setInterval(() => {\r\n      setSeconds(seconds);\r\n    }, 1000);\r\n\r\n    //Condition to clear\r\n    if (!hours) clearInterval(hoursTimer);\r\n    if (!minutes) clearInterval(minutesTimer);\r\n    if (!seconds) clearInterval(secondsTimer);\r\n  }, [hours, minutes, seconds]);\r\n\r\n  const onTimerCompleted = (): void => {\r\n    //!hours && !minutes && !seconds && console.log(\"Boom!\");\r\n  };\r\n\r\n  onTimerCompleted();\r\n\r\n  return (\r\n    <Layout>\r\n      <Timer settings={settings} onComplete={() => {}}>\r\n        {(hours: number, minutes: number, seconds: number) => (\r\n          <>\r\n            <span>{hours}</span>\r\n            <span>{minutes}</span>\r\n            <span>{seconds}</span>\r\n          </>\r\n        )}\r\n      </Timer>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default TimerPage;\r\n"]},"metadata":{},"sourceType":"module"}