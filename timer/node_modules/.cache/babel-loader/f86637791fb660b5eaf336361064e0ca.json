{"ast":null,"code":"var _jsxFileName = \"D:\\\\Beginner\\\\React-JS-BeginnerTasks\\\\timer\\\\src\\\\page\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Layout from \"../components/layout\";\nimport Timer from \"../components/timer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst date = new Date(\"2020-01-01 00:00:08\");\n\nconst TimerPage = () => {\n  _s();\n\n  const [timer, setTimer] = useState(date);\n  const [isTicking, setTicking] = useState(false);\n  useEffect(() => {\n    setTimer(date);\n  }, []);\n  useEffect(() => {\n    const runTimer = () => {\n      const tickTimer = setTimeout(() => {\n        if (isTicking && !(!timer.getSeconds() && !timer.getMinutes() && !timer.getHours())) {\n          setTimer(timer => new Date(+timer - 1000));\n        }\n      }, 1000);\n      return () => clearTimeout(tickTimer);\n    };\n\n    runTimer();\n  }, [timer, isTicking]);\n\n  const updateTimer = () => {\n    setTicking(false);\n    setTimer(date);\n  };\n\n  const pauseTimer = () => {\n    setTicking(!isTicking);\n  };\n\n  const resetTimer = () => {\n    setTicking(false);\n    setTimer(new Date(new Date().setHours(0, 0, 0, 0)));\n  };\n\n  const hours = timer.getHours();\n  const minutes = timer.getMinutes();\n  const seconds = timer.getSeconds();\n  const disabledStart = !hours && !minutes && !seconds;\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(Timer, {\n      settings: timer,\n      ticking: isTicking,\n      updateTimer: updateTimer,\n      pauseTimer: pauseTimer,\n      onComplete: resetTimer,\n      children: (hours, minutes, seconds) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timer\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: hours > 9 ? hours : \"0\" + hours\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \":\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: minutes > 9 ? minutes : \"0\" + minutes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \":\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: seconds > 9 ? seconds : \"0\" + seconds\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: updateTimer,\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: pauseTimer,\n            disabled: disabledStart,\n            children: isTicking ? \"Pause\" : \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: resetTimer,\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TimerPage, \"aPi/4kFHG4Obd14Qr6dPfClZ64U=\");\n\n_c = TimerPage;\nexport default TimerPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimerPage\");","map":{"version":3,"sources":["D:/Beginner/React-JS-BeginnerTasks/timer/src/page/index.tsx"],"names":["React","useEffect","useState","Layout","Timer","date","Date","TimerPage","timer","setTimer","isTicking","setTicking","runTimer","tickTimer","setTimeout","getSeconds","getMinutes","getHours","clearTimeout","updateTimer","pauseTimer","resetTimer","setHours","hours","minutes","seconds","disabledStart"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport { ComponentProps } from \"./types\";\r\n\r\nimport Layout from \"../components/layout\";\r\nimport Timer from \"../components/timer\";\r\n\r\nconst date = new Date(\"2020-01-01 00:00:08\");\r\n\r\nconst TimerPage: React.FC<ComponentProps> = () => {\r\n  const [timer, setTimer] = useState<Date>(date);\r\n  const [isTicking, setTicking] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    setTimer(date);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const runTimer = () => {\r\n      const tickTimer = setTimeout(() => {\r\n        if (\r\n          isTicking &&\r\n          !(!timer.getSeconds() && !timer.getMinutes() && !timer.getHours())\r\n        ) {\r\n          setTimer((timer) => new Date(+timer - 1000));\r\n        }\r\n      }, 1000);\r\n      return () => clearTimeout(tickTimer);\r\n    };\r\n\r\n    runTimer();\r\n  }, [timer, isTicking]);\r\n\r\n  const updateTimer = (): void => {\r\n    setTicking(false);\r\n    setTimer(date);\r\n  };\r\n\r\n  const pauseTimer = (): void => {\r\n    setTicking(!isTicking);\r\n  };\r\n\r\n  const resetTimer = (): void => {\r\n    setTicking(false);\r\n    setTimer(new Date(new Date().setHours(0, 0, 0, 0)));\r\n  };\r\n\r\n  const hours = timer.getHours();\r\n  const minutes = timer.getMinutes();\r\n  const seconds = timer.getSeconds();\r\n\r\n  const disabledStart = !hours && !minutes && !seconds;\r\n\r\n  return (\r\n    <Layout>\r\n      <Timer\r\n        settings={timer}\r\n        ticking={isTicking}\r\n        updateTimer={updateTimer}\r\n        pauseTimer={pauseTimer}\r\n        onComplete={resetTimer}\r\n      >\r\n        {(hours: number, minutes: number, seconds: number) => (\r\n          <>\r\n            <div className=\"timer\">\r\n              <p>{hours > 9 ? hours : \"0\" + hours}</p>\r\n              <span>:</span>\r\n              <p>{minutes > 9 ? minutes : \"0\" + minutes}</p>\r\n              <span>:</span>\r\n              <p>{seconds > 9 ? seconds : \"0\" + seconds}</p>\r\n            </div>\r\n            <div className=\"button-group\">\r\n              <button onClick={updateTimer}>Update</button>\r\n              <button onClick={pauseTimer} disabled={disabledStart}>\r\n                {isTicking ? \"Pause\" : \"Start\"}\r\n              </button>\r\n              <button onClick={resetTimer}>Reset</button>\r\n            </div>\r\n          </>\r\n        )}\r\n      </Timer>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default TimerPage;\r\n"]},"metadata":{},"sourceType":"module"}