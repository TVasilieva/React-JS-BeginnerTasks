{"ast":null,"code":"var _jsxFileName = \"D:\\\\Beginner\\\\React-JS-BeginnerTasks\\\\timer\\\\src\\\\page\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Layout from \"../components/layout\";\nimport Timer from \"../components/timer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst date = new Date(\"July 16, 2018 05:35:05\");\nconst initialHours = date.getHours();\nconst initialMinutes = date.getMinutes();\nconst initialSeconds = date.getSeconds();\n\nconst TimerPage = () => {\n  _s();\n\n  const [hours, setHours] = useState(initialHours);\n  const [minutes, setMinutes] = useState(initialMinutes);\n  const [seconds, setSeconds] = useState(initialSeconds);\n  useEffect(() => {\n    //Timers\n    const hoursTimer = setInterval(() => {\n      setHours(hours - 1);\n    }, 3600000);\n    const minutesTimer = setInterval(() => {\n      setMinutes(minutes - 1);\n    }, 60000);\n    const secondsTimer = setInterval(() => {\n      setSeconds(seconds - 1);\n    }, 1000); //Condition to clear\n\n    if (!hours) clearInterval(hoursTimer);\n    if (!minutes) clearInterval(minutesTimer);\n    if (!seconds) clearInterval(secondsTimer);\n  }, [hours, minutes, seconds]);\n\n  const onTimerCompleted = () => {//!seconds && console.log(\"Boom!\");\n  };\n\n  onTimerCompleted();\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(Timer, {\n      settings: hours,\n      hours: hours,\n      minutes: minutes,\n      seconds: seconds,\n      onComplete: () => {}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TimerPage, \"eMsB5LzW5ZayUKPXNlnc+e/sziI=\");\n\n_c = TimerPage;\nexport default TimerPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimerPage\");","map":{"version":3,"sources":["D:/Beginner/React-JS-BeginnerTasks/timer/src/page/index.tsx"],"names":["React","useEffect","useState","Layout","Timer","date","Date","initialHours","getHours","initialMinutes","getMinutes","initialSeconds","getSeconds","TimerPage","hours","setHours","minutes","setMinutes","seconds","setSeconds","hoursTimer","setInterval","minutesTimer","secondsTimer","clearInterval","onTimerCompleted"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAIA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;AAEA,MAAMC,IAAI,GAAG,IAAIC,IAAJ,CAAS,wBAAT,CAAb;AAEA,MAAMC,YAAY,GAAGF,IAAI,CAACG,QAAL,EAArB;AACA,MAAMC,cAAc,GAAGJ,IAAI,CAACK,UAAL,EAAvB;AACA,MAAMC,cAAc,GAAGN,IAAI,CAACO,UAAL,EAAvB;;AAEA,MAAMC,SAAmC,GAAG,MAAM;AAAA;;AAChD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAACK,YAAD,CAAlC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAACO,cAAD,CAAtC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAACS,cAAD,CAAtC;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMmB,UAAU,GAAGC,WAAW,CAAC,MAAM;AACnCN,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD,KAF6B,EAE3B,OAF2B,CAA9B;AAIA,UAAMQ,YAAY,GAAGD,WAAW,CAAC,MAAM;AACrCJ,MAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACD,KAF+B,EAE7B,KAF6B,CAAhC;AAIA,UAAMO,YAAY,GAAGF,WAAW,CAAC,MAAM;AACrCF,MAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACD,KAF+B,EAE7B,IAF6B,CAAhC,CAVc,CAcd;;AACA,QAAI,CAACJ,KAAL,EAAYU,aAAa,CAACJ,UAAD,CAAb;AACZ,QAAI,CAACJ,OAAL,EAAcQ,aAAa,CAACF,YAAD,CAAb;AACd,QAAI,CAACJ,OAAL,EAAcM,aAAa,CAACD,YAAD,CAAb;AACf,GAlBQ,EAkBN,CAACT,KAAD,EAAQE,OAAR,EAAiBE,OAAjB,CAlBM,CAAT;;AAoBA,QAAMO,gBAAgB,GAAG,MAAY,CACnC;AACD,GAFD;;AAIAA,EAAAA,gBAAgB;AAEhB,sBACE,QAAC,MAAD;AAAA,2BACE,QAAC,KAAD;AACE,MAAA,QAAQ,EAAEX,KADZ;AAEE,MAAA,KAAK,EAAEA,KAFT;AAGE,MAAA,OAAO,EAAEE,OAHX;AAIE,MAAA,OAAO,EAAEE,OAJX;AAKE,MAAA,UAAU,EAAE,MAAM,CAAE;AALtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA1CD;;GAAML,S;;KAAAA,S;AA4CN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport { ComponentProps } from \"./types\";\r\n\r\nimport Layout from \"../components/layout\";\r\nimport Timer from \"../components/timer\";\r\n\r\nconst date = new Date(\"July 16, 2018 05:35:05\");\r\n\r\nconst initialHours = date.getHours();\r\nconst initialMinutes = date.getMinutes();\r\nconst initialSeconds = date.getSeconds();\r\n\r\nconst TimerPage: React.FC<ComponentProps> = () => {\r\n  const [hours, setHours] = useState(initialHours);\r\n  const [minutes, setMinutes] = useState(initialMinutes);\r\n  const [seconds, setSeconds] = useState(initialSeconds);\r\n\r\n  useEffect(() => {\r\n    //Timers\r\n    const hoursTimer = setInterval(() => {\r\n      setHours(hours - 1);\r\n    }, 3600000);\r\n\r\n    const minutesTimer = setInterval(() => {\r\n      setMinutes(minutes - 1);\r\n    }, 60000);\r\n\r\n    const secondsTimer = setInterval(() => {\r\n      setSeconds(seconds - 1);\r\n    }, 1000);\r\n\r\n    //Condition to clear\r\n    if (!hours) clearInterval(hoursTimer);\r\n    if (!minutes) clearInterval(minutesTimer);\r\n    if (!seconds) clearInterval(secondsTimer);\r\n  }, [hours, minutes, seconds]);\r\n\r\n  const onTimerCompleted = (): void => {\r\n    //!seconds && console.log(\"Boom!\");\r\n  };\r\n\r\n  onTimerCompleted();\r\n\r\n  return (\r\n    <Layout>\r\n      <Timer\r\n        settings={hours}\r\n        hours={hours}\r\n        minutes={minutes}\r\n        seconds={seconds}\r\n        onComplete={() => {}}\r\n      />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default TimerPage;\r\n"]},"metadata":{},"sourceType":"module"}